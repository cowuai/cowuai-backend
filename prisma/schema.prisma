// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// ==========================
// Models
// ==========================

model Usuario {
  id             BigInt         @id @default(autoincrement())
  cpf            String         @unique @db.VarChar(14)
  nome           String         @db.VarChar(255)
  email          String         @unique @db.VarChar(255)
  senha          String         @db.VarChar(255)
  dataNascimento DateTime?      @map("data_nascimento") @db.Date
  ativo          Boolean        @default(true)
  fazenda        Fazenda[]
  refreshToken   RefreshToken[]

  @@map("usuario")
}

model Fazenda {
  id              BigInt   @id @default(autoincrement()) @db.BigInt
  idProprietario  BigInt   @map("id_proprietario") @db.BigInt
  nome            String   @db.VarChar(255)
  endereco        String   @db.VarChar(255)
  cidade          String   @db.VarChar(255)
  estado          String   @db.VarChar(50)
  pais            String   @db.VarChar(50)
  porte           Porte
  afixo           String   @db.VarChar(255)
  prefixo         Boolean  @db.UnsignedTinyInt
  sufixo          Boolean  @db.UnsignedTinyInt
  dataCadastro    DateTime @default(now()) @map("data_cadastro")
  dataAtualizacao DateTime @updatedAt @map("data_atualizacao")
  animais         Animal[]
  proprietario    Usuario? @relation(fields: [idProprietario], references: [id])

  @@map("fazenda")
}

model Animal {
  id                           BigInt       @id @default(autoincrement()) @db.BigInt
  nome                         String       @db.VarChar(255)
  tipoRaca                     TipoRaca
  sexo                         SexoAnimal
  composicaoRacial             String?      @db.VarChar(255)
  dataNascimento               DateTime?    @db.Date
  numeroParticularProprietario String?      @db.VarChar(255)
  registro                     String?      @db.VarChar(255)
  status                       StatusAnimal @default(VIVO)
  peso                         Float?
  localizacao                  String       @db.VarChar(255)

  // Relações com pais (outro Animal)
  pai           Animal?  @relation("PaiRelation", fields: [idPai], references: [id])
  idPai         BigInt?  @map("id_pai") @db.BigInt
  filhosComoPai Animal[] @relation("PaiRelation")

  mae           Animal?  @relation("MaeRelation", fields: [idMae], references: [id])
  idMae         BigInt?  @map("id_mae") @db.BigInt
  filhosComoMae Animal[] @relation("MaeRelation")

  // Relação com Fazenda
  fazenda        Fazenda @relation(fields: [idFazenda], references: [id])
  idFazenda      BigInt  @db.BigInt
  idProprietario BigInt?

  vacinacoes VacinaAplicada[]

  @@map("animal")
}

model RefreshToken {
  id          String   @id @default(uuid())
  idUsuario   BigInt
  token       String   @unique
  dispositivo String   @db.VarChar(255)
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  usuario Usuario @relation(fields: [idUsuario], references: [id])

  @@unique([idUsuario, dispositivo])
}

model TipoVacina {
  id              BigInt           @id @default(autoincrement()) @db.BigInt
  nome            String           @unique @db.VarChar(255)
  descricao       String?          @db.VarChar(255)
  obrigatoria     Boolean          @db.UnsignedTinyInt
  generoAlvo      SexoAnimal?
  minIdadeMeses   Int?             @map("min_idade_meses") @db.Int
  maxIdadeMeses   Int?             @map("max_idade_meses") @db.Int
  frequencia      FrequenciaVacina
  dataCadastro    DateTime         @default(now()) @map("data_cadastro")
  dataAtualizacao DateTime         @updatedAt @map("data_atualizacao")
  aplicacoes      VacinaAplicada[]

  @@map("tipo_vacina")
}

model VacinaAplicada {
  id              BigInt     @id @default(autoincrement()) @db.BigInt
  animal          Animal     @relation(fields: [idAnimal], references: [id])
  idAnimal        BigInt     @map("id_animal") @db.BigInt
  tipoVacina      TipoVacina @relation(fields: [idTipoVacina], references: [id])
  idTipoVacina    BigInt     @map("id_tipo_vacina") @db.BigInt
  dataAplicacao   DateTime   @map("data_aplicacao") @db.Date
  proximaDose     DateTime?  @map("proxima_dose") @db.Date
  numeroDose      Int?       @map("numero_dose") @db.Int
  lote            String?    @db.VarChar(255)
  veterinario     String?    @db.VarChar(255)
  observacoes     String?    @db.VarChar(255)
  dataCadastro    DateTime   @default(now()) @map("data_cadastro")
  dataAtualizacao DateTime   @updatedAt @map("data_atualizacao")

  @@map("vacina_aplicada")
}

// ==========================
// Enums
// ==========================

enum Porte {
  PEQUENO
  MEDIO   @map("MÉDIO")
  GRANDE
}

enum TipoRaca {
  NELORE
  GIR
  GIROLANDO
  BRAHMAN
  GUZERATE    @map("GUREZÁ")
  SINDI
  ANGUS
  BRANGUS
  LIMOUSIN
  CHIANINA
  DEVON
  BELGIANBLUE @map("BELGIAN BLUE")
  HEREFORD
  CANCHIM
  TABAPUA     @map("TABAPUÃ")
  CARACU
  SENEPOL
  CHAROLAISE  @map("CHAROLÊS")
  INDUBRASIL
  WAGYU
  SIMMENTAL
  CRIOULO
  JERSEY
  HOLANDES    @map("HOLANDÊS")
  MURRAH
  MESTICO     @map("MESTIÇO")
  OUTROS
}

enum SexoAnimal {
  MACHO
  FEMEA
  TODOS
}

enum StatusAnimal {
  VIVO
  FALECIDO
  VENDIDO
  DOADO
  ROUBADO
}

enum FrequenciaVacina {
  ANUAL
  SEMESTRAL
  BIMESTRAL
  TRIMESTRAL
  MENSAL
  DOSE_UNICA
  REFORCO
}
